package com.venticas.controller;

import java.util.LinkedList;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.venticas.business.CustomerBusiness;
import com.venticas.business.ProductBusiness;
import com.venticas.business.ShoppingCartBusiness;
import com.venticas.domain.Customer;
import com.venticas.domain.Item;
import com.venticas.domain.Product;
import com.venticas.domain.ShoppingCart;
import com.venticas.domain.User;

@Controller
public class ShoppingCartController {

	@Autowired
	ShoppingCartBusiness shoppingCartBusiness;
	@Autowired
	CustomerBusiness customerBusiness;
	@Autowired
	ProductBusiness productBusiness;

	@RequestMapping(value = "/ViewShopping", method = RequestMethod.GET)
	public String viewShoppingCart(Model model, HttpSession session) {
		User user = (User) session.getAttribute("user");
		Customer customer = customerBusiness.findCustomerByID(user);
		ShoppingCart cart = shoppingCartBusiness.getShopingCartByCustomerID(customer.getId());
		List<Product> products = new LinkedList<Product>();
		for (Item item : cart.getItems()) {
			Product product = productBusiness.findProductById(item.getProduct().getId());
			products.add(product);
		}
		model.addAttribute("Ã§art", cart);
		return "viewShoppingCart";
	}

	@RequestMapping(value = "/AddItemShoppingCart", method = RequestMethod.POST)
	public String viewShoppingCart(Model model, @RequestParam("productId") int pid,
			@RequestParam("quantity") int quantity, HttpSession session) {
		User user = (User) session.getAttribute("user");
		Customer customer = customerBusiness.findCustomerByID(user);
		ShoppingCart cart = shoppingCartBusiness.getShopingCartByCustomerID(customer.getId());
		Item item = new Item();
		item.setShoppingCart(cart);
		item.getProduct().setId(pid);
		item.setQuantity(quantity);
		shoppingCartBusiness.insertItem(item);
		return "viewShoppingCart";
	}

}
